{"version":3,"sources":["components/StoreProvider.js","utils/theme.js","components/Theme/ThemeProvider.js","components/Toolbar/Title.js","components/Toolbar/ToggleDrawerButton.js","components/Toolbar/ToggleLightThemeButton.js","components/Icons/Github.js","utils/browser.js","components/Toolbar/GithubLinkButton.js","components/Search/Search.js","components/Toolbar/Toolbar.js","components/Menu/Header.js","components/Menu/Item.js","components/Menu/Items.js","components/Menu/Menu.js","components/Layout/Wrapper.js","components/Layout/Drawer.js","components/Layout/TempDrawer.js","components/Layout/DrawerSwitcher.js","components/Layout/Bar.js","components/Layout/Content.js","components/Body/Test.js","components/Body/Body.js","components/App.js","stores/ViewStore.js","utils/text.js","stores/RouterStore.js","stores/AppStore.js","serviceWorker.js","index.js"],"names":["StoreProvider","_ref","store","children","react_default","a","createElement","index_module","view","router","defaults","bodyColor","dark","grey","light","palette","primary","teal","type","drawerWidth","colors","icons","stuff","amber","routes","getTheme","overrides","arguments","length","undefined","createMuiTheme","Object","assign","typography","useNextVariants","inject","observer","core_styles","theme","lightThemeActive","withStyles","title","mixins","gutters","flex","classes","Typography_default","className","variant","color","noWrap","IconButton_default","aria-label","onClick","toggleTempDrawer","Menu_default","toggleLightTheme","LightbulbOutline_default","Github","SvgIcon_default","d","getScreenWidth","window","innerWidth","GithubLinkButton","url","open","Icons_Github","container","defineProperty","position","display","breakpoints","up","input","width","transition","backgroundColor","border","outline","borderRadius","fontFamily","fontWeight","fontWeightLight","padding","concat","spacing","unit","marginRight","&:hover","&:focus","icon","height","left","Search_default","Fragment","showTempDrawer","Toolbar_ToggleDrawerButton","Toolbar_Title","components_Search_Search","Toolbar_ToggleLightThemeButton","Toolbar_GithubLinkButton","drawerHeader","toolbar","flexDirection","overflow","headline","cursor","text","secondary","alignItems","paddingBottom","marginTop","lineHeight","textDecoration","caption","goTo","itemText","selected","action","hover","disabled","ListItem_default","button","ListItemIcon_default","ListItemText_default","styles","list","divider","margin","StyledList","rest","objectWithoutProperties","List_default","StyledDivider","_ref2","Divider_default","_ref3","Menu_Item","pathname","Inbox_default","style","Gesture_default","Menu","Menu_Header","Menu_Items","StyledWrapper","wrapper","flexGrow","zIndex","react_event_listener_cjs_default","target","onResize","onScreenResize","drawerPaper","Drawer_default","anchor","paper","StyledMuiDrawer","ModalProps","keepMounted","tempDrawerOpen","onClose","Layout_TempDrawer","Layout_Drawer","appBar","right","AppBar_default","Toolbar_default","content","background","default","disableGutters","StyledTest","Body_Test","App","components_StoreProvider","process","mobx_react_devtools_default","Theme_ThemeProvider","Layout_Wrapper","Layout_Bar","components_Toolbar_Toolbar","Layout_DrawerSwitcher","components_Menu_Menu","Layout_Content","components_Body_Body","ViewStore","appStore","_this","this","classCallCheck","screenWidth","closeTempDrawer","string","charAt","toUpperCase","slice","console","warn","capitalize","split","decorate","observable","computed","RouterStore","route","history","push","setPathname","createHistory","basename","location","listen","log","configure","enforceActions","Boolean","hostname","match","ReactDOM","render","components_App","AppStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ca38cf0.chunk.js","sourcesContent":["import React from 'react';\nimport { Provider as MobxProvider } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\n// this component dictates which stores can be injected into app components\nconst StoreProvider = ({ store, children }) => (\n  <MobxProvider\n    view={store.view}\n    router={store.router}\n  >\n    {children}\n  </MobxProvider>\n);\n\nStoreProvider.propTypes = {\n  store: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default StoreProvider;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport teal from '@material-ui/core/colors/teal';\nimport grey from '@material-ui/core/colors/grey';\n\nconst defaults = {\n  bodyColor: {\n    dark: grey['A400'],\n    light: grey[50],\n  },\n  palette: {\n    primary: teal,\n    type: 'light'\n  },\n  drawerWidth: 240,\n};\n\nexport const colors = {\n  icons: {\n    stuff: amber[500],\n  },\n  routes: {\n    stuff: amber,\n  },\n};\n\nexport const getTheme = (overrides = {}) => {\n  return createMuiTheme(\n    Object.assign(\n      {},\n      defaults,\n      overrides,\n      {\n        typography: {\n          useNextVariants: true,\n        },\n      },\n    )\n  );\n}\n\n\n// setBodyColor(this.settings.bodyColor[this.settings.palette.type]);\n// this.settings.palette.type = this.settings.palette.type === 'light'\n//   ? 'dark'\n//   : 'light';\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nimport { getTheme } from '../../utils/theme';\n\nconst ThemeProvider = ({ view, children }) => (\n  <MuiThemeProvider theme={getTheme({\n    palette: {\n      type: view.lightThemeActive ? 'light' : 'dark',\n    },\n  })}>\n    {children}\n  </MuiThemeProvider>\n);\n\nThemeProvider.propTypes = {\n  view: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default inject('view')(observer(ThemeProvider));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  title: Object.assign({}, theme.mixins.gutters(), {\n    flex: '1 1 auto',\n  }),\n});\n\nconst Title = ({ classes, title }) => (\n  <Typography\n    className={classes.title}\n    variant='h6'\n    color='inherit'\n    noWrap\n  >\n    {title}\n  </Typography>\n);\n\nTitle.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string,\n};\n\nexport default withStyles(styles)(Title);\n","import React from 'react';\nimport { inject } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst ToggleDrawerButton = ({ view }) => (\n  <IconButton\n    color='inherit'\n    aria-label='open drawer'\n    onClick={() => view.toggleTempDrawer()}\n  >\n    <MenuIcon />\n  </IconButton>\n);\n\nToggleDrawerButton.propTypes = {\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(ToggleDrawerButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport LightbulbOutline from '@material-ui/icons/LightbulbOutline';\n\nconst ToggleLightThemeButton = ({ view }) => (\n  <IconButton\n    color='inherit'\n    aria-label='toggle light theme'\n    onClick={() => view.toggleLightTheme()}\n  >\n    <LightbulbOutline />\n  </IconButton>\n);\n\nToggleLightThemeButton.propTypes = {\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(ToggleLightThemeButton);\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nconst Github = () => (\n  <SvgIcon>\n    <path d='M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3' />\n  </SvgIcon>\n);\n\nexport default Github;\n","export const getScreenWidth = () => {\n  return window.innerWidth;\n};\n\nexport const setBodyColor = (color) => {\n  document.body.style.background = color;\n};\n\nexport const navigateTo = (url) => {\n  window.open(url);\n};\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Github from '../Icons/Github';\nimport { navigateTo } from '../../utils/browser'\n\nconst GithubLinkButton = () => (\n  <IconButton\n    color='inherit'\n    aria-label='go to github'\n    onClick={() => navigateTo('https://github.com/heinburger/react-mobx-materialui-starter')}\n  >\n    <Github />\n  </IconButton>\n);\n\nexport default GithubLinkButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  container: {\n    position: 'relative',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  input: {\n    width: '200px',\n    transition: 'width 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    color: 'inherit',\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n    border: 'none',\n    outline: 'none',\n    borderRadius: '2px',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightLight,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit}px ${theme.spacing.unit}px ${theme.spacing.unit * 9}px`,\n    marginRight: `${theme.spacing.unit * 2}px`,\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.20)',\n    },\n    '&:focus': {\n      width: '250px',\n    },\n  },\n  icon: {\n    position: 'absolute',\n    height: '34px',\n    left: 0,\n    padding: `0 ${theme.spacing.unit * 3}px`,\n  },\n});\n\nconst Search = ({ classes }) => (\n  <div className={classes.container}>\n    <input className={classes.input} />\n    <SearchIcon className={classes.icon} />\n  </div>\n);\n\nSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Search);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\n\nimport Title from './Title';\nimport ToggleDrawerButton from './ToggleDrawerButton';\nimport ToggleLightThemeButton from './ToggleLightThemeButton';\nimport GithubLinkButton from './GithubLinkButton';\nimport Search from '../Search';\n\nconst Toolbar = ({ view }) => (\n  <>\n    {view.showTempDrawer\n      ? <ToggleDrawerButton />\n      : <React.Fragment />}\n    <Title title={view.title} />\n    <Search />\n    <ToggleLightThemeButton />\n    <GithubLinkButton />\n  </>\n);\n\nToolbar.propTypes = {\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(observer(Toolbar));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  drawerHeader: Object.assign({}, theme.mixins.toolbar, {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: `0 ${theme.spacing.unit * 2}px`,\n    overflow: 'hidden',\n  }),\n  headline: {\n    flex: '1 1 auto',\n    cursor: 'pointer',\n    display: 'flex',\n    color: theme.palette.text.secondary,\n    alignItems: 'center',\n    paddingBottom: 0,\n    marginTop: `${theme.spacing.unit * 0.5}px`,\n    lineHeight: '1.25rem',\n    '&:hover': {\n      color: theme.palette.secondary[theme.palette.type],\n      textDecoration: 'underline'\n    }\n  },\n  caption: {\n    flex: '1 1 auto',\n  },\n  icon: {\n    marginRight: `${theme.spacing.unit}px`,\n  },\n});\n\nconst Header = ({ classes, router }) => (\n  <div className={classes.drawerHeader}>\n    <Typography\n      className={classes.headline}\n      variant='h5'\n      noWrap\n      onClick={() => router.goTo('/')}\n    >\n      Boilerplate\n    </Typography>\n    <Typography className={classes.caption} variant='caption' noWrap>\n      v0.2.0\n    </Typography>\n  </div>\n);\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  router: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(inject('router')(Header));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = theme => ({\n  itemText: {\n    padding: 0,\n  },\n  selected: {\n    backgroundColor: theme.palette.action.hover,\n  },\n});\n\nconst Item = ({onClick, classes, icon, title, selected, disabled}) => (\n  <ListItem\n    button\n    disabled={disabled}\n    className={selected ? classes.selected : ''}\n    onClick={onClick}\n  >\n    <ListItemIcon>{icon}</ListItemIcon>\n    <ListItemText className={classes.itemText} secondary={title} />\n  </ListItem>\n);\n\nItem.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  icon: PropTypes.element.isRequired,\n  title: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool,\n};\n\nexport default withStyles(styles)(Item);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Gesture from '@material-ui/icons/Gesture';\nimport Inbox from '@material-ui/icons/Inbox';\n\nimport { colors } from '../../utils/theme'\nimport MenuItem from './Item';\n\nconst styles = theme => ({\n  list: {\n    width: '100%',\n    paddingBottom: `${theme.spacing.unit * 8}px`,\n  },\n  divider: {\n    margin: `${theme.spacing.unit}px 0`,\n  },\n});\n\nconst StyledList = withStyles(styles)(({ classes, ...rest }) => (\n  <List className={classes.list} {...rest} />\n));\n\nconst StyledDivider = withStyles(styles)(({ classes, ...rest }) => (\n  <Divider className={classes.divider} {...rest} />\n));\n\nconst Items = ({ router }) => (\n  <StyledList>\n    <MenuItem\n      onClick={() => router.goTo('/stuff')}\n      selected={router.pathname === '/stuff'}\n      icon={<Inbox style={{color: colors.icons.stuff}} />}\n      title={'Stuff'}\n    />\n    <StyledDivider />\n    <MenuItem\n      onClick={() => router.goTo('/other')}\n      selected={router.pathname === '/other'}\n      icon={<Gesture />}\n      title={'More stuff'}\n    />\n  </StyledList>\n);\n\nItems.propTypes = {\n  router: PropTypes.object.isRequired,\n}\n\nexport default inject('router')(observer(Items));\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Header from './Header';\nimport Items from './Items';\n\nconst Menu = () => (\n  <>\n    <Header />\n    <Divider />\n    <Items />\n  </>\n);\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport EventListener from 'react-event-listener';\n\nconst styles = theme => ({\n  wrapper: {\n    flexGrow: 1,\n    zIndex: 1,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  },\n});\n\nconst StyledWrapper = withStyles(styles)(({ classes, ...rest }) => (\n  <div className={classes.wrapper} {...rest} />\n));\n\nconst Wrapper = ({ children, view }) => (\n  <StyledWrapper>\n    {children}\n    <EventListener target='window' onResize={view.onScreenResize} />\n  </StyledWrapper>\n);\n\nWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired,\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(Wrapper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDrawer from '@material-ui/core/Drawer';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: theme.drawerWidth,\n    position: 'relative',\n  },\n});\n\nconst Drawer = ({ classes, children }) => (\n  <MuiDrawer\n    variant='permanent'\n    anchor='left'\n    classes={{\n      paper: classes.drawerPaper,\n    }}\n  >\n    {children}\n  </MuiDrawer>\n)\n\nDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n}\n\nexport default withStyles(styles)(Drawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiDrawer from '@material-ui/core/Drawer';\n\nconst styles = theme => ({\n  drawerPaper: {\n    width: theme.drawerWidth,\n  },\n});\n\nconst StyledMuiDrawer = withStyles(styles)(({ classes, ...rest }) => (\n  <MuiDrawer\n    variant='temporary'\n    anchor='left'\n    classes={{\n      paper: classes.drawerPaper,\n    }}\n    ModalProps={{\n      keepMounted: true, // Better open performance on mobile.\n    }}\n    {...rest}\n  />\n));\n\nconst TempDrawer = ({ view, children }) => (\n  <StyledMuiDrawer\n    open={view.tempDrawerOpen}\n    onClose={view.toggleTempDrawer}\n  >\n    {children}\n  </StyledMuiDrawer>\n)\n\nTempDrawer.propTypes = {\n  view: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n}\n\nexport default inject('view')(observer(TempDrawer));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\n\nimport Drawer from './Drawer';\nimport TempDrawer from './TempDrawer';\n\nconst DrawerSwitcher = ({ view, children }) => view.showTempDrawer\n  ? <TempDrawer>{children}</TempDrawer>\n  : <Drawer>{children}</Drawer>;\n\nDrawerSwitcher.propTypes = {\n  view: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n}\n\nexport default inject('view')(observer(DrawerSwitcher));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport MuiToolbar from '@material-ui/core/Toolbar';\n\nconst styles = theme => ({\n  appBar: {\n    right: 0,\n    left: 'auto',\n    position: 'absolute',\n    [theme.breakpoints.up('md')]: {\n      width: `calc(100% - ${theme.drawerWidth}px)`,\n    },\n  },\n});\n\nconst Bar = ({ classes, children }) => (\n  <MuiAppBar className={classes.appBar}>\n    <MuiToolbar>\n      {children}\n    </MuiToolbar>\n  </MuiAppBar>\n);\n\nBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default withStyles(styles)(Bar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  content: Object.assign({}, theme.mixins.gutters(), {\n    backgroundColor: theme.palette.background.default,\n    flex: '1 1 auto',\n  }),\n})\n\nconst Content = ({ classes, children, disableGutters }) => (\n  <main className={!disableGutters && classes.content}>\n    <div className={classes.toolbar} />\n    {children}\n  </main>\n)\n\nContent.propTypes = {\n  disableGutters: PropTypes.bool,\n  children: PropTypes.element.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(Content);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { observer, inject } from 'mobx-react';\n\nconst styles = theme => ({\n  title: Object.assign({}, theme.mixins.gutters(), {\n    flex: '1 1 auto',\n  }),\n});\n\nconst StyledTest = withStyles(styles)(({ classes, ...rest }) => (\n  <div className={classes.title} {...rest} />\n));\n\nconst Test = ({ view }) => (\n  <StyledTest>\n    {view.title}\n  </StyledTest>\n);\n\nTest.propTypes = {\n  view: PropTypes.object.isRequired,\n};\n\nexport default inject('view')(observer(Test));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { observer, inject } from 'mobx-react';\nimport Test from './Test';\n\nconst Body = ({ router }) => (\n  <div>\n    {router.pathname}\n    <Test />\n  </div>\n);\n\nBody.propTypes = {\n  router: PropTypes.object.isRequired,\n};\n\nexport default inject('router')(observer(Body));\n","import React from 'react';\nimport DevTools from 'mobx-react-devtools';\n\nimport StoreProvider from './StoreProvider'\nimport Theme from './Theme';\nimport Toolbar from './Toolbar';\nimport Menu from './Menu';\nimport { Wrapper, DrawerSwitcher, Bar, Content } from './Layout';\nimport Body from './Body';\n\nconst App = ({ store }) => (\n  <StoreProvider store={store}>\n    <>\n      {process.env !== 'production' && <DevTools />}\n      <Theme>\n        <Wrapper>\n          <Bar><Toolbar /></Bar>\n          <DrawerSwitcher><Menu /></DrawerSwitcher>\n          <Content>\n            <Body />\n          </Content>\n        </Wrapper>\n      </Theme>\n    </>\n  </StoreProvider>\n);\n\nexport default App;\n","import { decorate, observable, action, computed } from 'mobx';\n\nimport { getScreenWidth } from '../utils/browser';\nimport { capitalize } from '../utils/text';\n\nclass ViewStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n  }\n\n  // OBSERVABLES................................................................\n  tempDrawerOpen = false;\n  screenWidth = getScreenWidth();\n  lightThemeActive = true;\n\n  // COMPUTEDS..................................................................\n  get showTempDrawer() {\n    return this.screenWidth < 960;\n  }\n\n  get title() {\n    return capitalize(this.appStore.router.pathname.split('/')[1])\n  }\n\n  // ACTIONS....................................................................\n  onScreenResize = () => {\n    this.screenWidth = getScreenWidth();\n  }\n\n  toggleTempDrawer = () => {\n    this.tempDrawerOpen = !this.tempDrawerOpen;\n  }\n\n  closeTempDrawer = () => {\n    this.tempDrawerOpen = false;\n  }\n\n  toggleLightTheme = () => {\n    this.lightThemeActive = !this.lightThemeActive;\n  }\n}\n\ndecorate(ViewStore, {\n  tempDrawerOpen: observable,\n  screenWidth: observable,\n  lightThemeActive: observable,\n  showTempDrawer: computed,\n  onScreenResize: action,\n  toggleTempDrawer: action,\n  closeTempDrawer: action,\n  toggleLightTheme: action,\n});\n\nexport default ViewStore;\n","export const capitalize = (string = '') => {\n  if (typeof string !== 'string') {\n    console.warn(`capitalize: cannot capitalize ${typeof string}`);\n    return;\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1)\n};\n","import { decorate, observable, action } from 'mobx';\nimport createHistory from 'history/createBrowserHistory';\n\nclass RouterStore {\n  constructor(appStore) {\n    this.appStore = appStore;\n    this.history = createHistory({\n      basename: process.env.PUBLIC_URL,\n    });\n    this.setPathname(this.history.location.pathname)\n    this.history.listen((location, action) => {\n      this.setPathname(location.pathname);\n      console.log(`The last navigation action was ${action}`)\n    });\n  }\n\n  // OBSERVABLES................................................................\n  pathname = ''\n\n  // COMPUTEDS..................................................................\n  // get pathname() {\n  //   return this.history.location.pathname;\n  // }\n\n  // ACTIONS....................................................................\n  goTo = (route = '/') => {\n    this.history.push(route);\n    if (this.appStore.view.showTempDrawer && this.appStore.view.tempDrawerOpen) {\n      this.appStore.view.closeTempDrawer();\n    }\n  }\n  setPathname = (pathname) => {\n    this.pathname = pathname;\n  }\n}\n\ndecorate(RouterStore, {\n  pathname: observable,\n  goTo: action,\n  setPathname: action,\n});\n\nexport default RouterStore;\n","import { configure } from 'mobx';\n\nimport ViewStore from './ViewStore';\nimport RouterStore from './RouterStore';\n\nconfigure({ enforceActions: 'observed' });\n\nexport default class AppStore {\n  constructor() {\n    this.view = new ViewStore(this);\n    this.router = new RouterStore(this);\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport App from './components/App';\nimport AppStore from './stores/AppStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App store={ new AppStore() }/>,\n  document.getElementById('root')\n);\n\n// enable offline: unregister() to register()\nserviceWorker.unregister();\n"],"sourceRoot":""}